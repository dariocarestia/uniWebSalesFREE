window.onerror = function () { }; $(function () {
    var a = false, d = "textfocus", b = "default"; $("a").focus(function () { this.blur() }); SI.Files.stylizeAll(); slider.init(); $("input.text-default").each(function () { $(this).attr(b, $(this).val()) }).focus(function () { $(this).val() == $(this).attr(b) && $(this).val("") }).blur(function () { $(this).val() == "" && $(this).val($(this).attr(b)) }); $("input.text,textarea.text").focus(function () { $(this).addClass(d) }).blur(function () { $(this).removeClass(d) }); var c = 0, e = null; $("a.popup").click(function () { var b = $(this).attr("rel").split("|")[0], f = parseInt($(this).attr("rel").split("|")[1]), d = $("#" + b); if (!d.length) return a; if (typeof c == "object" && c.attr("id") != b) { c.hide(50); $(e).parent().removeClass(c.attr("id").split("-")[1] + "-open"); c = null } return a }); $("p.images img").click(function () { var b = $(this).attr("src").split("bg/bg")[1].split("-thumb")[0]; $(document.body).css("backgroundImage", "url(" + _siteRoot + "images/bg/bg" + b + ".jpg)"); $(this).parent().find("img").removeClass("on"); $(this).addClass("on"); return a });

    $(window).load(function () {

        //$.each(css_ims, function () { (new Image).src = _siteRoot + "css/images/" + this });
        //$.each(css_cims, function () { var a = this; $.each(["blue", "purple", "pink", "red", "grey", "green", "yellow", "orange"], function () { (new Image).src = _siteRoot + "css/" + this + "/" + a }) })
    });

    $("div.sc-large div.img:has(div.tml)").each(function () { var b = this; $("div.tml", b).hide(); $(b).append('<a href="#" class="tml_open">&nbsp;</a>').find("a").css({ left: parseInt($(b).offset().left) + 864, top: parseInt($(b).offset().top) + 1 }).click(function () { $(this).siblings("div.tml").slideToggle(); return a }).focus(function () { this.blur() }) })
}); var slider = { num: -1, cur: 0, cr: [], al: null, at: 10 * 1e3, ar: true, init: function () { if (!slider.data || !slider.data.length) return false; var c = slider.data; slider.num = c.length; for (var b = Math.floor(Math.random() * 1), a = 0; a < slider.num; a++) { $("#" + c[a].id).css({ left: (a - b) * 1e3 }); $("#slide-nav").append('<a id="slide-link-' + a + '" href="#" onclick="slider.slide(' + a + ');return false;" onfocus="this.blur();">' + (a + 1) + "</a>") } $("img,div#slide-controls", $("div#slide-holder")).fadeIn(); slider.text(c[b]); slider.on(b); slider.cur = b; window.setTimeout("slider.auto();", slider.at) }, auto: function () { if (!slider.ar) return false; var a = slider.cur + 1; if (a >= slider.num) a = 0; slider.slide(a) }, slide: function (a) { if (a < 0 || a >= slider.num || a == slider.cur) return; window.clearTimeout(slider.al); slider.al = window.setTimeout("slider.auto();", slider.at); for (var c = slider.data, b = 0; b < slider.num; b++) $("#" + c[b].id).stop().animate({ left: (b - a) * 1e3 }, 1e3, "swing"); slider.on(a); slider.text(c[a]); slider.cur = a }, on: function (a) { $("#slide-nav a").removeClass("on"); $("#slide-nav a#slide-link-" + a).addClass("on") }, text: function (a) { slider.cr.a = a.client; slider.cr.b = a.desc; slider.ticker("#slide-client span", a.client, 0, "a"); slider.ticker("#slide-desc", a.desc, 0, "b") }, ticker: function (c, a, b, d) { if (slider.cr[d] != a) return false; ctext = a.substring(0, b) + (b % 2 ? "-" : "_"); $(c).html(ctext); if (b == a.length) $(c).html(a); else window.setTimeout('slider.ticker("' + c + '","' + a + '",' + (b + 1) + ',"' + d + '");', 30) } }; if (!window.SI) var SI = {}; SI.Files = { htmlClass: "SI-FILES-STYLIZED", fileClass: "file", wrapClass: "cabinet", fini: false, able: false, init: function () { this.fini = true }, stylize: function (a) { !this.fini && this.init(); if (!this.able) return; a.parentNode.file = a; a.parentNode.onmousemove = function (a) { var c = "undefined"; if (typeof a == c) a = window.event; if (typeof a.pageY == c && typeof a.clientX == "number" && document.documentElement) { a.pageX = a.clientX + document.documentElement.scrollLeft; a.pageY = a.clientY + document.documentElement.scrollTop } var d = oy = 0, b = this; if (b.offsetParent) { d = b.offsetLeft; oy = b.offsetTop; while (b = b.offsetParent) { d += b.offsetLeft; oy += b.offsetTop } } } }, stylizeAll: function () { !this.fini && this.init(); if (!this.able) return void 0 } }